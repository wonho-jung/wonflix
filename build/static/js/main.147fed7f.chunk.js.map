{"version":3,"sources":["assets/noPosterSmall.png","assets/noImage.jpg","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upComing","loading","error","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","MoivesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","serarchByTerm","target","console","log","a","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","VideoTitle","h5","ItemContainer","Divider","Overview","p","Video","Imdb","button","TitleContainer","VideoError","CompanyContainer","Uibox","SmallImg","SmallContent","h6","ScrollContainer","img","SeasonsContainer","SeasonPoster","DetailPresenter","result","backdrop_path","href","imdb_id","homepage","runtime","episode_run_time","genres","genre","index","name","overview","seasons","autoPlay","videos","width","height","src","allowFullScreen","frameborder","allow","production_companies","company","className","logo_path","production_countries","country","item","air_date","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","globalstyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.147fed7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","module.exports = __webpack_public_path__ + \"static/media/noImage.75a4676d.jpg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n:not(:last-child) {\r\n    margin-bottom: 50px;\r\n}\r\n`;\r\n\r\nconst Title = styled.span`\r\nfont-size: 14px;\r\nfont-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\nmargin-top: 25px;\r\ndisplay: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\n\r\nSection.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Container = styled.div`\r\nheight: 100vh;\r\nwidth: 100vw;\r\ndisplay: flex;\r\njustify-content: center;\r\nfont-size: 28px;\r\nmargin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n    </Container>\r\n);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Container = styled.div`\r\nwidth: 100vw;\r\ndisplay: flex;\r\njustify-content: center;\r\n`\r\n\r\n\r\nconst Text = styled.span`\r\ncolor: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\nfont-size: 12px;\r\n`;\r\nconst Image = styled.div`\r\nbackground-image: url(${props => props.bgUrl});\r\nheight: 180px;\r\nbackground-size: cover;\r\nbackground-position: center center;\r\nborder-radius: 4px;\r\ntransition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\nbottom: 5px;\r\nright: 5px;\r\nposition: absolute;\r\nopacity:0;\r\ntransition: opacity 0.1s linear;\r\n`;\r\nconst ImageContainer = styled.div`\r\nposition: relative;\r\nmargin-bottom: 4px;\r\n&:hover {\r\n    ${Image} {\r\n        opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n        opacity: 1;\r\n    }\r\n}\r\n`;\r\n\r\nconst Title = styled.span `\r\ndisplay: block;\r\nmargin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span `\r\nfont-size:10px;\r\ncolor: rgba(255,255,255,0.5);\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false }) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={\r\n                    imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\")} />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">\r\n                    ⭐️\r\n                    </span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n\r\n};\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upComing, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Wonflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | Wonflix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upComing && upComing.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upComing.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n    params: {\r\n        api_key: \"76bfce2e1ca11a14f663023ba2208348\",\r\n        language: \"en-US\"\r\n    }\r\n  });\r\n\r\n\r\nexport const MoivesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upComing: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\",{\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: (id) => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/tv\",{\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n};","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { MoivesApi } from \"api\"\r\n\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying:null,\r\n        upComing:null,\r\n        popular:null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const {\r\n            data: {results: nowPlaying}\r\n        } = await MoivesApi.nowPlaying();\r\n            const {\r\n            data: {results: upComing}\r\n        } = await MoivesApi.upComing();\r\n            const {\r\n            data: {results: popular}\r\n        } = await MoivesApi.popular();\r\n\r\n        this.setState({\r\n            nowPlaying,\r\n            upComing,\r\n            popular\r\n        });\r\n            \r\n        }catch{\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            })\r\n        } finally{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upComing, popular, error, loading } =this.state;\r\n        return(\r\n            <HomePresenter \r\n             nowPlaying={nowPlaying}\r\n             upComing={upComing}\r\n             popular={popular}\r\n             error={error}\r\n             loading={loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Wonflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport {tvApi} from \"api\"\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        topRated:null,\r\n        popular:null,\r\n        airingToday: null,\r\n        loading: true,\r\n        error: null\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try{\r\n            const {data:{results: topRated}} = await tvApi.topRated();\r\n            const {data:{results: popular}} = await tvApi.popular();\r\n            const {data:{results: airingToday}} = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            })\r\n        }catch{\r\n            this.setState({\r\n                error: \"Can't find any TV Programs...\"\r\n            })\r\n        }finally{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n\r\nrender() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return<TVPresenter \r\n    topRated={topRated}\r\n    popular={popular}\r\n    airingToday={airingToday}\r\n    loading={loading}\r\n    error={error}\r\n    \r\n    />\r\n}\r\n\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Wonflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport {MoivesApi, tvApi} from \"api\"\r\n\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n        error: null\r\n    };\r\n\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if(searchTerm !== \"\"){\r\n            this.serarchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = (event) => {\r\n        const{target:{value}} = event;\r\n        console.log(value);\r\n        this.setState({\r\n            searchTerm: value\r\n        });\r\n    };\r\n\r\n    serarchByTerm = async() => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({ loading: true });\r\n        try{\r\n            const {data: {results:movieResults}} = await MoivesApi.search(searchTerm);\r\n            const {data:{results:tvResults}} = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            });\r\n            \r\n        }catch{\r\n            this.setState({ error: \"Can't find result.\" });\r\n        }finally{\r\n            this.setState({loading: false});\r\n        }\r\n    };\r\n\r\nrender() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return<SearchPresenter \r\n    movieResults={movieResults}\r\n    tvResults={tvResults}\r\n    searchTerm={searchTerm}\r\n    loading={loading}\r\n    error={error}\r\n    handleSubmit={this.handleSubmit}\r\n    updateTerm = {this.updateTerm}\r\n    />\r\n};\r\n\r\n}","import React from \"react\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\ncolor: white;\r\nposition:fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 50px;\r\ndisplay: flex;\r\nalign-items: center;\r\npadding: 0px 10px;\r\nbackground-color:rgba(20, 20, 20, 0.8);\r\nz-index: 10;\r\nbox-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\ndisplay: flex;\r\n\r\n`;\r\n\r\nconst Item = styled.li`\r\nwidth: 80px;\r\nheight: 50px;\r\ntext-align: center;\r\nborder-bottom:5px solid  \r\n${props => (props.current ? \"#E71C23\" : \"transparent\")};\r\ntransition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\n\r\nconst SLink = styled(Link)`\r\nheight: 50px;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n`;\r\n\r\nexport default withRouter (({location: { pathname }}) => (\r\n        <Header>\r\n            <List>\r\n                <Item current={pathname ===\"/\"}>\r\n                    <SLink to=\"/\">Movies</SLink>\r\n                </Item>\r\n                <Item current={pathname ===\"/tv\"}>\r\n                    <SLink to=\"/tv\">TV</SLink>\r\n                </Item>\r\n                <Item current={pathname === \"/search\"}>\r\n                    <SLink to=\"/search\">Search</SLink>\r\n                </Item>\r\n            </List>\r\n        </Header>\r\n        )\r\n);","\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\nconst Container = styled.div`\r\nheight: calc(100vh - 50px);\r\nwidth: 100%;\r\nposition: relative;\r\npadding: 50px;\r\n\r\n\r\n\r\n\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground-image: url(${props => props.bgImage});\r\nbackground-position: center center;\r\nbackground-size:  cover;\r\nfilter: blur(3px);\r\nopacity: 0.5;\r\nz-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\ndisplay: flex;\r\nwidth: 100%;\r\nposition: relative;\r\nz-index: 1;\r\nheight: 100%;\r\n\r\n@media only screen and (max-width:600px){\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  .Cover{\r\n    width: 80%;\r\n  }\r\n  .Data{\r\n    width: 80%;\r\n  }\r\n}\r\n`;\r\n\r\nconst Cover = styled.div`\r\nwidth: 40%;\r\nbackground-image: url(${props => props.bgImage});\r\nbackground-position: center center;\r\nbackground-size: cover;\r\nheight: 100%;\r\nborder-radius: 5px;\r\n\r\n@media only screen and (max-width:600px){\r\n  display: none;\r\n  \r\n}\r\n\r\n`;\r\n\r\nconst Data = styled.div`\r\nwidth: 60%;\r\nmargin-left: 20px;\r\n\r\n@media only screen and (max-width:600px){\r\n  margin-top: 50px;\r\n    width: 100%;\r\n    margin-left: 0px;\r\n}\r\n\r\n`;\r\n\r\nconst Title = styled.h3`\r\nfont-size: 32px;\r\n`;\r\nconst VideoTitle = styled.h5`\r\nfont-size: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\nmargin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\nmargin: 0 10px;\r\n`;\r\n\r\nconst Overview= styled.p`\r\nfont-size: 12px;\r\nopacity: 0.7;\r\nline-height: 1.5;\r\nwidth: 50%;\r\nmargin-bottom: 20px;\r\n\r\n@media only screen and (max-width:600px){\r\n  width: 100%;\r\n}\r\n`;\r\n\r\nconst Rating = styled.span`\r\nbottom: 5px;\r\nright: 5px;\r\nposition: absolute;\r\nopacity:0;\r\ntransition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Video = styled.div`\r\nmargin-top: 20px;\r\nwidth: 100%;\r\nheight: 100%;\r\n`;\r\n\r\nconst Imdb = styled.button`\r\nbackground-color: rgb(245, 197, 24);\r\n    color: rgb(0, 0, 0);\r\n    font-size: 15px;\r\n    font-weight: 700;\r\n    margin-top: 11px;\r\n    margin-left: 10px;\r\n    padding:0 10px;\r\n    border-radius: 25px;\r\n    border: none;\r\n    &:hover{\r\n      opacity: 0.7;\r\n      cursor: pointer;\r\n    }\r\n`;\r\nconst TitleContainer = styled.div`\r\ndisplay: flex;\r\n`;\r\n\r\nconst VideoError = styled.h3`\r\nfont-size: 30px;\r\n`\r\nconst CompanyContainer = styled.div`\r\ndisplay: flex;\r\n`;\r\nconst Uibox = styled.div`\r\ntext-align: center;\r\nmargin-right: 20px;\r\nmax-width: 500px;\r\n`;\r\n\r\n\r\nconst SmallImg = styled.div`\r\n\r\n\r\n`;\r\n\r\nconst SmallContent = styled.h6`\r\nfont-size: 20px;\r\nfont-weight: 500;\r\nmargin-bottom: 20px;\r\ntext-justify: center;\r\n`;\r\n\r\nconst cImg = styled.img `\r\nwidth: 100px;\r\nheight: 100px;\r\n`;\r\n\r\nconst ScrollContainer = styled.div `\r\n\r\nmax-width: 800px;\r\nmin-height: 500px;\r\noverflow: scroll;\r\n\r\n`;\r\n\r\nconst SeasonsContainer = styled.div `\r\ndisplay: flex;\r\n`;\r\n\r\nconst SeasonPoster = styled.div`\r\nmargin-right: 20px;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DetailPresenter = ({ result, loading, error }) => loading ?\r\n(<>\r\n<Helmet><title>Loading | Wonflix</title></Helmet>\r\n<Loader />\r\n</>\r\n) : (\r\n  <Container>\r\n    <Helmet>\r\n      <title>\r\n        {result.original_title ? result.original_title : result.original_name}{\" \"} | Wonflix\r\n      </title>\r\n    </Helmet>\r\n\r\n\r\n    <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n    <Content>\r\n      <Cover bgImage={result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")}/>\r\n\r\n    <Data>\r\n      <TitleContainer>\r\n      <Title>\r\n        {result.original_title ? result.original_title : result.original_name}\r\n      </Title>\r\n\r\n      <a href={result.imdb_id ? `//www.imdb.com/title/${result.imdb_id}/` : `${result.homepage}`} target=\"blank\">\r\n      <Imdb>{result.imdb_id ? \"IMDB\" : \"HomePage\"}</Imdb>\r\n      </a>\r\n      </TitleContainer>\r\n\r\n      <ItemContainer>\r\n        <Item>{result.release_date ? result.release_date.substring(0, 4) :\r\n        result.first_air_date.substring(0, 4)}</Item>\r\n        <Divider>•</Divider>\r\n        <Item>\r\n        {result.runtime !==null ? result.runtime : result.episode_run_time[0]} min\r\n        </Item>\r\n            <Divider>•</Divider>\r\n        <Item>\r\n          {result.genres && result.genres.map((genre, index) => index === result.genres.length -1 ? genre.name : \r\n          `${genre.name} /`)}\r\n        </Item>\r\n        <Divider>•</Divider>\r\n            <Item>\r\n              <span role=\"img\" aria-label=\"rating\">\r\n                ⭐️\r\n              </span>{\" \"}\r\n              {result.vote_average}/10\r\n            </Item>\r\n        \r\n      </ItemContainer>\r\n      <Overview> {result.overview} </Overview>\r\n\r\n      <ScrollContainer>\r\n    <Tabs>\r\n    <TabList>\r\n      <Tab>Video</Tab>\r\n      <Tab>Companies</Tab>\r\n      <Tab>Countries</Tab>\r\n      {result.seasons ? <Tab>Seasons</Tab> : null}\r\n    </TabList>\r\n    {console.log(result)}\r\n    <TabPanel>\r\n    <VideoTitle>Trailer</VideoTitle>\r\n    \r\n          <Video>\r\n            <Carousel autoPlay>\r\n            {(result.videos.results).length > 0 ?\r\n          result.videos.results.map((Video, index) => \r\n          (\r\n            \r\n          <div>\r\n          <iframe \r\n          key={index}\r\n          width=\"80%\" \r\n          height=\"350\" \r\n          src={`https://www.youtube.com/embed/${Video.key}`}\r\n          allowFullScreen \r\n          frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"/>\r\n          </div>\r\n        \r\n          ))\r\n          : <VideoError>No Trailer sorry :( </VideoError>} \r\n          </Carousel>\r\n          </Video>\r\n    </TabPanel>\r\n\r\n\r\n    <TabPanel>\r\n    \r\n    <CompanyContainer>\r\n    \r\n          {result.production_companies.map(company =>\r\n          \r\n          <Uibox>\r\n            <SmallContent>{company.name}</SmallContent>\r\n            <SmallImg>\r\n            <img className=\"cImg\" src={company.logo_path ? `https://image.tmdb.org/t/p/w200${company.logo_path}`  :  require(\"../../assets/noImage.jpg\")}></img>\r\n            </SmallImg>           \r\n           \r\n           </Uibox>\r\n          )}\r\n         \r\n          </CompanyContainer>\r\n          \r\n    </TabPanel>\r\n\r\n\r\n    <TabPanel>\r\n      {result.production_countries ? result.production_countries.map(country => \r\n      <SmallContent>{country.name}</SmallContent>)\r\n    : \"NO DATA :(\"}\r\n          </TabPanel>\r\n\r\n    <TabPanel>\r\n      <SeasonsContainer>\r\n      {result.seasons ? result.seasons.map((item, index) => \r\n      <SeasonPoster>\r\n      <img key={index} \r\n      src={item.poster_path ? \r\n      `https://image.tmdb.org/t/p/w200${item.poster_path}` \r\n      : require(\"../../assets/noImage.jpg\")} />\r\n      <h6>{item.air_date}</h6>\r\n      <h6>{item.name}</h6>\r\n      </SeasonPoster>\r\n      \r\n      \r\n      ): null}\r\n      </SeasonsContainer>\r\n    </TabPanel>\r\n  \r\n  \r\n  \r\n  </Tabs>\r\n  </ScrollContainer>\r\n\r\n          \r\n    </Data>\r\n    </Content>\r\n  </Container>\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { MoivesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    console.log(this.props);\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await MoivesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\"; \r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n        <Header/>\r\n        <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact  component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n        </Switch>\r\n        </>\r\n    </Router>\r\n);","import { createGlobalStyle } from \"styled-components\"\r\nimport reset from \"styled-reset\"; \r\nconst globalstyles = createGlobalStyle`\r\n${reset};\r\na{\r\n    text-decoration:none;\r\n    color:inherit;\r\n}\r\n*{\r\n    box-sizing:border-box;\r\n}\r\nbody{\r\n    font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size:14px;\r\n    background-color:rgba(20, 20, 20, 1);\r\n    color: white;\r\n    padding-top: 50px;\r\n    \r\n}\r\n`;\r\n\r\n\r\n\r\n\r\nexport default globalstyles;","import React, { Component } from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\nreturn (\n     <>\n     < Router /> \n     <GlobalStyles />\n     </>)\n     ;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}